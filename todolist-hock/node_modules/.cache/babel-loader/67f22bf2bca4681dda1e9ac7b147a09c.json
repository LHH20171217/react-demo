{"ast":null,"code":"import _slicedToArray from \"/Users/cvter/Documents/todolist/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/cvter/Documents/todolist/src/App.js\";\nimport React, { useState } from 'react';\nimport Head from './components/Head';\nimport List from './components/List';\nimport Foot from './components/Foot';\n\nfunction App() {\n  const _useState = useState([{\n    id: 1,\n    title: '看一小时React的课程',\n    finished: false\n  }, {\n    id: 2,\n    title: '打一小时篮球',\n    finished: false\n  }, {\n    id: 3,\n    title: '游泳一小时',\n    finished: false\n  }, {\n    id: 4,\n    title: '看书一小时',\n    finished: false\n  }]),\n        _useState2 = _slicedToArray(_useState, 2),\n        todos = _useState2[0],\n        setTodos = _useState2[1];\n\n  const _useState3 = useState(0),\n        _useState4 = _slicedToArray(_useState3, 2),\n        finishedCount = _useState4[0],\n        setfinishedCount = _useState4[1]; // 修改完成状态\n\n\n  const changeTodoFinished = (todoId, isFinished) => {\n    // 遍历\n    todos.forEach(todo => {\n      if (todo.id === todoId) {\n        todo.finished = isFinished;\n      }\n\n      if (todo.finished) {\n        finishedCount++;\n      }\n    }); //  更新状态\n\n    setTodos([...todos]);\n    setfinishedCount(finishedCount);\n  }; // 选中、取消所有\n\n\n  const dealSelectedAllTodo = flag => {\n    todos.forEach(todo => {\n      todo.finished = flag;\n\n      if (todo.finished) {\n        finishedCount++;\n      }\n    }); //  更新状态\n\n    setTodos([...todos]);\n    setfinishedCount(finishedCount);\n  }; // 添加一条todo\n\n\n  const addOneTodo = todo => {\n    todos.push(todo);\n    setTodos([...todos]);\n  }; // 删除一条记录\n\n\n  const removeTodoWithId = todoId => {\n    todos.forEach((todo, index) => {\n      if (todo.id === todoId) {\n        todos.splice(index, 1);\n      }\n    });\n    todos.forEach(todo => {\n      if (todo.finished) {\n        finishedCount++;\n      }\n    }); //  更新状态\n\n    setTodos([...todos]);\n    setfinishedCount(finishedCount);\n  }; // 删除已经完成的所有任务\n\n\n  const delCheckTodo = () => {\n    let tempArr = [];\n    todos.forEach(todo => {\n      if (!todo.finished) {\n        tempArr.push(todo);\n      }\n    }); // 更新状态\n\n    setTodos(tempArr);\n    setfinishedCount(0);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"todo-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"todo-wrap\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(Head, {\n    lastTodoId: todos.length === 0 ? 0 : todos[todos.length - 1].id,\n    addOneTodo: addOneTodo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }), React.createElement(List, {\n    todos: todos,\n    changeTodoFinished: changeTodoFinished,\n    removeTodoWithId: removeTodoWithId,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }), React.createElement(Foot, {\n    finishedCount: finishedCount,\n    totalCount: todos.length,\n    dealSelectedAllTodo: dealSelectedAllTodo,\n    delCheckTodo: delCheckTodo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/cvter/Documents/todolist/src/App.js"],"names":["React","useState","Head","List","Foot","App","id","title","finished","todos","setTodos","finishedCount","setfinishedCount","changeTodoFinished","todoId","isFinished","forEach","todo","dealSelectedAllTodo","flag","addOneTodo","push","removeTodoWithId","index","splice","delCheckTodo","tempArr","length"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Head from './components/Head'\nimport List from './components/List'\nimport Foot from './components/Foot'\n\nfunction App() {\n  const [todos, setTodos] = useState([\n    { id: 1, title: '看一小时React的课程', finished: false },\n    { id: 2, title: '打一小时篮球', finished: false },\n    { id: 3, title: '游泳一小时', finished: false },\n    { id: 4, title: '看书一小时', finished: false },\n  ],\n  );\n  const [finishedCount, setfinishedCount] = useState(0)\n\n  // 修改完成状态\n  const changeTodoFinished = (todoId, isFinished) => {\n    // 遍历\n    todos.forEach((todo) => {\n      if (todo.id === todoId) {\n        todo.finished = isFinished;\n      }\n      if (todo.finished) {\n        finishedCount++\n      }\n    });\n    //  更新状态\n    setTodos([...todos])\n    setfinishedCount(finishedCount)\n  }\n  // 选中、取消所有\n  const dealSelectedAllTodo = (flag) => {\n    todos.forEach(todo => {\n      todo.finished = flag\n      if (todo.finished) {\n        finishedCount++\n      }\n    })\n    //  更新状态\n    setTodos([...todos])\n    setfinishedCount(finishedCount)\n  };\n  // 添加一条todo\n  const addOneTodo = (todo) => {\n    todos.push(todo);\n    setTodos([...todos])\n  };\n  // 删除一条记录\n  const removeTodoWithId = (todoId) => {\n    todos.forEach((todo, index) => {\n      if (todo.id === todoId) {\n        todos.splice(index, 1);\n      }\n    })\n    todos.forEach(todo => {\n      if (todo.finished) {\n        finishedCount++;\n      }\n    });\n    //  更新状态\n    setTodos([...todos])\n    setfinishedCount(finishedCount)\n  };\n\n  // 删除已经完成的所有任务\n  const delCheckTodo = () => {\n    let tempArr = [];\n    todos.forEach(todo => {\n      if (!todo.finished) {\n        tempArr.push(todo)\n      }\n    })\n    // 更新状态\n    setTodos(tempArr)\n    setfinishedCount(0)\n  }\n\n  return (\n    <div className=\"todo-container\" >\n      <div className=\"todo-wrap\">\n        <Head lastTodoId={todos.length === 0 ? 0 : todos[todos.length - 1].id} addOneTodo={addOneTodo} />\n        <List todos={todos} changeTodoFinished={changeTodoFinished} removeTodoWithId={removeTodoWithId} />\n        <Foot finishedCount={finishedCount}\n          totalCount={todos.length}\n          dealSelectedAllTodo={dealSelectedAllTodo}\n          delCheckTodo={delCheckTodo} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}