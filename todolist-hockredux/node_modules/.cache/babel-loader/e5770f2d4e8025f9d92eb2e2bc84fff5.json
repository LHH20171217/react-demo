{"ast":null,"code":"import _slicedToArray from \"/Users/cvter/Documents/react-demo/todolist-hockredux/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/cvter/Documents/react-demo/todolist-hockredux/src/App.js\";\nimport React, { useState, useReducer } from 'react';\nimport Head from './components/Head';\nimport List from './components/List';\nimport Foot from './components/Foot';\nimport reducer from './store/reducer';\nimport { getDelItemAction, getChangeItemFinishedAction, getIsCheckedAll } from './store/actionCreators';\n\nfunction App() {\n  const _useState = useState([{\n    id: 1,\n    title: '看一小时React的课程',\n    finished: false\n  }, {\n    id: 2,\n    title: '打一小时篮球',\n    finished: false\n  }, {\n    id: 3,\n    title: '游泳一小时',\n    finished: false\n  }, {\n    id: 4,\n    title: '看书一小时',\n    finished: false\n  }]),\n        _useState2 = _slicedToArray(_useState, 2),\n        todos = _useState2[0],\n        setTodos = _useState2[1];\n\n  const _useState3 = useState(0),\n        _useState4 = _slicedToArray(_useState3, 2),\n        finishedCount = _useState4[0],\n        setfinishedCount = _useState4[1];\n\n  const state = {\n    todos,\n    finishedCount\n  };\n\n  const _useReducer = useReducer(reducer, state),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        newState = _useReducer2[0],\n        dispatch = _useReducer2[1]; // 修改完成状态\n\n\n  const changeTodoFinished = (todoId, isFinished) => {\n    dispatch(getChangeItemFinishedAction(todoId, isFinished));\n  }; // 选中、取消所有\n\n\n  const dealSelectedAllTodo = flag => {\n    // let finishedCountAdd = 0\n    // todos.forEach(todo => {\n    //   todo.finished = flag\n    //   if (todo.finished) {\n    //     finishedCountAdd++\n    //   }\n    // })\n    // //  更新状态\n    // setTodos([...todos])\n    // setfinishedCount(finishedCountAdd)\n    dispatch(getIsCheckedAll(flag));\n  }; // 添加一条todo\n\n\n  const addOneTodo = todo => {\n    todos.push(todo);\n    setTodos([...todos]);\n  }; // 删除一条记录\n\n\n  const removeTodoWithId = todoId => {\n    dispatch(getDelItemAction(todoId));\n    console.log('newState', newState);\n  }; // 删除已经完成的所有任务\n\n\n  const delCheckTodo = () => {\n    let tempArr = [];\n    todos.forEach(todo => {\n      if (!todo.finished) {\n        tempArr.push(todo);\n      }\n    }); // 更新状态\n\n    setTodos(tempArr);\n    setfinishedCount(0);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"todo-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"todo-wrap\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(Head, {\n    lastTodoId: todos.length === 0 ? 0 : todos[todos.length - 1].id,\n    addOneTodo: addOneTodo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }), React.createElement(List, {\n    todos: newState.todos,\n    changeTodoFinished: changeTodoFinished,\n    removeTodoWithId: removeTodoWithId,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }), React.createElement(Foot, {\n    finishedCount: finishedCount,\n    totalCount: todos.length,\n    dealSelectedAllTodo: dealSelectedAllTodo,\n    delCheckTodo: delCheckTodo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/cvter/Documents/react-demo/todolist-hockredux/src/App.js"],"names":["React","useState","useReducer","Head","List","Foot","reducer","getDelItemAction","getChangeItemFinishedAction","getIsCheckedAll","App","id","title","finished","todos","setTodos","finishedCount","setfinishedCount","state","newState","dispatch","changeTodoFinished","todoId","isFinished","dealSelectedAllTodo","flag","addOneTodo","todo","push","removeTodoWithId","console","log","delCheckTodo","tempArr","forEach","length"],"mappings":"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","sourcesContent":["import React, { useState,useReducer } from 'react';\nimport Head from './components/Head'\nimport List from './components/List'\nimport Foot from './components/Foot'\nimport reducer from './store/reducer'\n\nimport {getDelItemAction,getChangeItemFinishedAction,getIsCheckedAll} from './store/actionCreators'\n\nfunction App() {\n  \n  const [todos, setTodos] = useState([\n    { id: 1, title: '看一小时React的课程', finished: false },\n    { id: 2, title: '打一小时篮球', finished: false },\n    { id: 3, title: '游泳一小时', finished: false },\n    { id: 4, title: '看书一小时', finished: false },\n  ],\n  );\n  const [finishedCount, setfinishedCount] = useState(0)\n\n  const state = {\n    todos,\n    finishedCount\n  }\n\n  const [newState, dispatch] = useReducer(reducer,state);\n\n  // 修改完成状态\n  const changeTodoFinished = (todoId, isFinished) => {\n    dispatch(getChangeItemFinishedAction(todoId, isFinished))\n  }\n  // 选中、取消所有\n  const dealSelectedAllTodo = (flag) => {\n    // let finishedCountAdd = 0\n    // todos.forEach(todo => {\n    //   todo.finished = flag\n    //   if (todo.finished) {\n    //     finishedCountAdd++\n    //   }\n    // })\n    // //  更新状态\n    // setTodos([...todos])\n    // setfinishedCount(finishedCountAdd)\n    dispatch(getIsCheckedAll(flag))\n  };\n  // 添加一条todo\n  const addOneTodo = (todo) => {\n    todos.push(todo);\n    setTodos([...todos])\n  };\n  // 删除一条记录\n  const removeTodoWithId = (todoId) => {\n    dispatch(getDelItemAction(todoId))\n    console.log('newState',newState)\n  };\n\n  // 删除已经完成的所有任务\n  const delCheckTodo = () => {\n    let tempArr = [];\n    todos.forEach(todo => {\n      if (!todo.finished) {\n        tempArr.push(todo)\n      }\n    })\n    // 更新状态\n    setTodos(tempArr)\n    setfinishedCount(0)\n  }\n\n  return (\n    <div className=\"todo-container\" >\n      <div className=\"todo-wrap\">\n        <Head lastTodoId={todos.length === 0 ? 0 : todos[todos.length - 1].id} addOneTodo={addOneTodo} />\n        <List todos={newState.todos} changeTodoFinished={changeTodoFinished} removeTodoWithId={removeTodoWithId} />\n        <Foot finishedCount={finishedCount}\n          totalCount={todos.length}\n          dealSelectedAllTodo={dealSelectedAllTodo}\n          delCheckTodo={delCheckTodo} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}