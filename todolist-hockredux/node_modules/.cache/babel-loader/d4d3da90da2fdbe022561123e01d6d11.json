{"ast":null,"code":"import _slicedToArray from \"/Users/cvter/Documents/react-demo/todolist-hockredux/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/cvter/Documents/react-demo/todolist-hockredux/src/App.js\";\nimport React, { useState, useReducer } from 'react';\nimport Head from './components/Head';\nimport List from './components/List';\nimport Foot from './components/Foot';\nimport reducer from './store/reducer';\nimport { getDelItemAction, getChangeItemFinishedAction, getIsCheckedAll, getAddItemAction, getRemoveFinishedItemAction } from './store/actionCreators';\n\nfunction App() {\n  const _useState = useState([{\n    id: 1,\n    title: '看一小时React的课程',\n    finished: false\n  }, {\n    id: 2,\n    title: '打一小时篮球',\n    finished: false\n  }, {\n    id: 3,\n    title: '游泳一小时',\n    finished: false\n  }, {\n    id: 4,\n    title: '看书一小时',\n    finished: false\n  }]),\n        _useState2 = _slicedToArray(_useState, 1),\n        todos = _useState2[0];\n\n  const _useState3 = useState(0),\n        _useState4 = _slicedToArray(_useState3, 1),\n        finishedCount = _useState4[0];\n\n  const state = {\n    todos,\n    finishedCount\n  };\n\n  const _useReducer = useReducer(reducer),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        newState = _useReducer2[0],\n        dispatch = _useReducer2[1];\n\n  console.log(useReducer(reducer)); // 修改完成状态\n\n  const changeTodoFinished = (todoId, isFinished) => {\n    dispatch(getChangeItemFinishedAction(todoId, isFinished));\n  }; // 选中、取消所有\n\n\n  const dealSelectedAllTodo = flag => {\n    dispatch(getIsCheckedAll(flag));\n  }; // 添加一条todo\n\n\n  const addOneTodo = todo => {\n    dispatch(getAddItemAction(todo));\n  }; // 删除一条记录\n\n\n  const removeTodoWithId = todoId => {\n    dispatch(getDelItemAction(todoId));\n  }; // 删除已经完成的所有任务\n\n\n  const delCheckTodo = () => {\n    dispatch(getRemoveFinishedItemAction());\n  };\n\n  return React.createElement(\"div\", {\n    className: \"todo-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"todo-wrap\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/cvter/Documents/react-demo/todolist-hockredux/src/App.js"],"names":["React","useState","useReducer","Head","List","Foot","reducer","getDelItemAction","getChangeItemFinishedAction","getIsCheckedAll","getAddItemAction","getRemoveFinishedItemAction","App","id","title","finished","todos","finishedCount","state","newState","dispatch","console","log","changeTodoFinished","todoId","isFinished","dealSelectedAllTodo","flag","addOneTodo","todo","removeTodoWithId","delCheckTodo"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAAyBC,UAAzB,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,OAAP,MAAoB,iBAApB;AAEA,SAAQC,gBAAR,EAAyBC,2BAAzB,EAAqDC,eAArD,EAAqEC,gBAArE,EAAsFC,2BAAtF,QAAwH,wBAAxH;;AAEA,SAASC,GAAT,GAAe;AAAA,oBAEGX,QAAQ,CAAC,CACvB;AAAEY,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,KAAK,EAAE,cAAhB;AAAgCC,IAAAA,QAAQ,EAAE;AAA1C,GADuB,EAEvB;AAAEF,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,KAAK,EAAE,QAAhB;AAA0BC,IAAAA,QAAQ,EAAE;AAApC,GAFuB,EAGvB;AAAEF,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,KAAK,EAAE,OAAhB;AAAyBC,IAAAA,QAAQ,EAAE;AAAnC,GAHuB,EAIvB;AAAEF,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,KAAK,EAAE,OAAhB;AAAyBC,IAAAA,QAAQ,EAAE;AAAnC,GAJuB,CAAD,CAFX;AAAA;AAAA,QAENC,KAFM;;AAAA,qBASWf,QAAQ,CAAC,CAAD,CATnB;AAAA;AAAA,QASNgB,aATM;;AAWb,QAAMC,KAAK,GAAG;AACZF,IAAAA,KADY;AAEZC,IAAAA;AAFY,GAAd;;AAXa,sBAgBgBf,UAAU,CAACI,OAAD,CAhB1B;AAAA;AAAA,QAgBNa,QAhBM;AAAA,QAgBIC,QAhBJ;;AAiBbC,EAAAA,OAAO,CAACC,GAAR,CAAYpB,UAAU,CAACI,OAAD,CAAtB,EAjBa,CAmBb;;AACA,QAAMiB,kBAAkB,GAAG,CAACC,MAAD,EAASC,UAAT,KAAwB;AACjDL,IAAAA,QAAQ,CAACZ,2BAA2B,CAACgB,MAAD,EAASC,UAAT,CAA5B,CAAR;AACD,GAFD,CApBa,CAuBb;;;AACA,QAAMC,mBAAmB,GAAIC,IAAD,IAAU;AACpCP,IAAAA,QAAQ,CAACX,eAAe,CAACkB,IAAD,CAAhB,CAAR;AACD,GAFD,CAxBa,CA2Bb;;;AACA,QAAMC,UAAU,GAAIC,IAAD,IAAU;AAC3BT,IAAAA,QAAQ,CAACV,gBAAgB,CAACmB,IAAD,CAAjB,CAAR;AACD,GAFD,CA5Ba,CA+Bb;;;AACA,QAAMC,gBAAgB,GAAIN,MAAD,IAAY;AACnCJ,IAAAA,QAAQ,CAACb,gBAAgB,CAACiB,MAAD,CAAjB,CAAR;AACD,GAFD,CAhCa,CAoCb;;;AACA,QAAMO,YAAY,GAAG,MAAM;AACzBX,IAAAA,QAAQ,CAACT,2BAA2B,EAA5B,CAAR;AACD,GAFD;;AAIA,SACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAYD;;AAED,eAAeC,GAAf","sourcesContent":["import React, { useState,useReducer } from 'react';\nimport Head from './components/Head'\nimport List from './components/List'\nimport Foot from './components/Foot'\nimport reducer from './store/reducer'\n\nimport {getDelItemAction,getChangeItemFinishedAction,getIsCheckedAll,getAddItemAction,getRemoveFinishedItemAction} from './store/actionCreators'\n\nfunction App() {\n  \n  const [todos] = useState([\n    { id: 1, title: '看一小时React的课程', finished: false },\n    { id: 2, title: '打一小时篮球', finished: false },\n    { id: 3, title: '游泳一小时', finished: false },\n    { id: 4, title: '看书一小时', finished: false },\n  ],\n  );\n  const [finishedCount] = useState(0)\n\n  const state = {\n    todos,\n    finishedCount\n  }\n\n  const [newState, dispatch] = useReducer(reducer);\n  console.log(useReducer(reducer))\n\n  // 修改完成状态\n  const changeTodoFinished = (todoId, isFinished) => {\n    dispatch(getChangeItemFinishedAction(todoId, isFinished))\n  }\n  // 选中、取消所有\n  const dealSelectedAllTodo = (flag) => {\n    dispatch(getIsCheckedAll(flag))\n  };\n  // 添加一条todo\n  const addOneTodo = (todo) => {\n    dispatch(getAddItemAction(todo))\n  };\n  // 删除一条记录\n  const removeTodoWithId = (todoId) => {\n    dispatch(getDelItemAction(todoId))\n  };\n\n  // 删除已经完成的所有任务\n  const delCheckTodo = () => {\n    dispatch(getRemoveFinishedItemAction())\n  }\n\n  return (\n    <div className=\"todo-container\" >\n      <div className=\"todo-wrap\">\n        {/* <Head lastTodoId={todos.length === 0 ? 0 : todos[todos.length - 1].id} addOneTodo={addOneTodo} />\n        <List todos={newState.todos} changeTodoFinished={changeTodoFinished} removeTodoWithId={removeTodoWithId} />\n        <Foot finishedCount={newState.finishedCount}\n          totalCount={newState.todos.length}\n          dealSelectedAllTodo={dealSelectedAllTodo}\n          delCheckTodo={delCheckTodo} /> */}\n      </div>\n    </div>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}