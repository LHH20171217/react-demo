{"ast":null,"code":"import { DEL_TODO_ITEM, CHANGE_TODO_ITEM, ADD_TODO_ITEM, REMOVE_FINISHED_TODO_ITEM, IS_CHECKED_ALL_TODO_ITEM } from './actionTypes'; // 1. 删除一条记录\n\nexport const getDelItemAction = todoId => ({\n  type: DEL_TODO_ITEM,\n  todoId\n}); // 2. 修改一条记录的状态\n\nexport const getChangeItemFinishedAction = (todoId, isFinished) => ({\n  type: CHANGE_TODO_ITEM,\n  todoId,\n  isFinished\n}); // 3. 添加一条记录\n\nexport const getAddItemAction = todo => ({\n  type: ADD_TODO_ITEM,\n  todo\n}); // 4. 删除已经完成的所有任务\n\nexport const getRemoveFinishedItemAction = () => ({\n  type: REMOVE_FINISHED_TODO_ITEM\n}); // 5. 全选和非全选\n\nexport const getIsCheckedAll = flag => ({\n  type: IS_CHECKED_ALL_TODO_ITEM,\n  flag\n});","map":{"version":3,"sources":["/Users/cvter/Documents/react-demo/todolist-hockredux/src/store/actionCreators.js"],"names":["DEL_TODO_ITEM","CHANGE_TODO_ITEM","ADD_TODO_ITEM","REMOVE_FINISHED_TODO_ITEM","IS_CHECKED_ALL_TODO_ITEM","getDelItemAction","todoId","type","getChangeItemFinishedAction","isFinished","getAddItemAction","todo","getRemoveFinishedItemAction","getIsCheckedAll","flag"],"mappings":"AAAA,SAAQA,aAAR,EAAuBC,gBAAvB,EAAyCC,aAAzC,EAAwDC,yBAAxD,EAAmFC,wBAAnF,QAAkH,eAAlH,C,CAEA;;AACA,OAAO,MAAMC,gBAAgB,GAAIC,MAAD,KAAW;AACvCC,EAAAA,IAAI,EAAEP,aADiC;AAEvCM,EAAAA;AAFuC,CAAX,CAAzB,C,CAKP;;AACA,OAAO,MAAME,2BAA2B,GAAG,CAACF,MAAD,EAASG,UAAT,MAAuB;AAC9DF,EAAAA,IAAI,EAAEN,gBADwD;AAE9DK,EAAAA,MAF8D;AAG9DG,EAAAA;AAH8D,CAAvB,CAApC,C,CAMP;;AACA,OAAO,MAAMC,gBAAgB,GAAIC,IAAD,KAAS;AACrCJ,EAAAA,IAAI,EAAEL,aAD+B;AAErCS,EAAAA;AAFqC,CAAT,CAAzB,C,CAKP;;AACA,OAAO,MAAMC,2BAA2B,GAAG,OAAK;AAC5CL,EAAAA,IAAI,EAAEJ;AADsC,CAAL,CAApC,C,CAIP;;AACA,OAAO,MAAMU,eAAe,GAAIC,IAAD,KAAW;AACvCP,EAAAA,IAAI,EAAEH,wBADiC;AAEvCU,EAAAA;AAFuC,CAAX,CAAxB","sourcesContent":["import {DEL_TODO_ITEM, CHANGE_TODO_ITEM, ADD_TODO_ITEM, REMOVE_FINISHED_TODO_ITEM, IS_CHECKED_ALL_TODO_ITEM} from './actionTypes'\n\n// 1. 删除一条记录\nexport const getDelItemAction = (todoId)=>({\n    type: DEL_TODO_ITEM,\n    todoId\n});\n\n// 2. 修改一条记录的状态\nexport const getChangeItemFinishedAction = (todoId, isFinished)=>({\n    type: CHANGE_TODO_ITEM,\n    todoId,\n    isFinished\n});\n\n// 3. 添加一条记录\nexport const getAddItemAction = (todo)=>({\n    type: ADD_TODO_ITEM,\n    todo\n});\n\n// 4. 删除已经完成的所有任务\nexport const getRemoveFinishedItemAction = ()=>({\n    type: REMOVE_FINISHED_TODO_ITEM\n});\n\n// 5. 全选和非全选\nexport const getIsCheckedAll = (flag) => ({\n   type: IS_CHECKED_ALL_TODO_ITEM,\n   flag\n});\n"]},"metadata":{},"sourceType":"module"}