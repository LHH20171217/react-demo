{"ast":null,"code":"import _slicedToArray from \"/Users/cvter/Documents/react-demo/todolist-hockredux/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/cvter/Documents/react-demo/todolist-hockredux/src/App.js\";\nimport React, { useState, useReducer } from 'react';\nimport Head from './components/Head';\nimport List from './components/List';\nimport Foot from './components/Foot';\nimport reducer from './store/reducer';\nimport { DEL_TODO_ITEM } from './store/actionTypes';\n\nfunction App() {\n  const _useState = useState([{\n    id: 1,\n    title: '看一小时React的课程',\n    finished: false\n  }, {\n    id: 2,\n    title: '打一小时篮球',\n    finished: false\n  }, {\n    id: 3,\n    title: '游泳一小时',\n    finished: false\n  }, {\n    id: 4,\n    title: '看书一小时',\n    finished: false\n  }]),\n        _useState2 = _slicedToArray(_useState, 2),\n        todos = _useState2[0],\n        setTodos = _useState2[1];\n\n  const _useState3 = useState(0),\n        _useState4 = _slicedToArray(_useState3, 2),\n        finishedCount = _useState4[0],\n        setfinishedCount = _useState4[1];\n\n  const newState = {\n    todos,\n    finishedCount\n  };\n\n  const _useReducer = useReducer(reducer, newState),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        state = _useReducer2[0],\n        dispatch = _useReducer2[1]; // 修改完成状态\n\n\n  const changeTodoFinished = (todoId, isFinished) => {\n    dispatch({\n      type: DEL_TODO_ITEM,\n      todoId: 1\n    });\n    console.log('state', state);\n    let finishedCountAdd = 0; // 遍历\n\n    todos.forEach(todo => {\n      if (todo.id === todoId) {\n        todo.finished = isFinished;\n      }\n\n      if (todo.finished) {\n        finishedCountAdd++;\n      }\n    }); //  更新状态\n\n    setTodos([...todos]);\n    setfinishedCount(finishedCountAdd);\n  }; // 选中、取消所有\n\n\n  const dealSelectedAllTodo = flag => {\n    let finishedCountAdd = 0;\n    todos.forEach(todo => {\n      todo.finished = flag;\n\n      if (todo.finished) {\n        finishedCountAdd++;\n      }\n    }); //  更新状态\n\n    setTodos([...todos]);\n    setfinishedCount(finishedCountAdd);\n  }; // 添加一条todo\n\n\n  const addOneTodo = todo => {\n    todos.push(todo);\n    setTodos([...todos]);\n  }; // 删除一条记录\n\n\n  const removeTodoWithId = todoId => {\n    let finishedCountAdd = 0;\n    todos.forEach((todo, index) => {\n      if (todo.id === todoId) {\n        todos.splice(index, 1);\n      }\n    });\n    todos.forEach(todo => {\n      if (todo.finished) {\n        finishedCountAdd++;\n      }\n    }); //  更新状态\n\n    setTodos([...todos]);\n    setfinishedCount(finishedCountAdd);\n  }; // 删除已经完成的所有任务\n\n\n  const delCheckTodo = () => {\n    let tempArr = [];\n    todos.forEach(todo => {\n      if (!todo.finished) {\n        tempArr.push(todo);\n      }\n    }); // 更新状态\n\n    setTodos(tempArr);\n    setfinishedCount(0);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"todo-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"todo-wrap\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(Head, {\n    lastTodoId: todos.length === 0 ? 0 : todos[todos.length - 1].id,\n    addOneTodo: addOneTodo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }), React.createElement(List, {\n    todos: todos,\n    changeTodoFinished: changeTodoFinished,\n    removeTodoWithId: removeTodoWithId,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }), React.createElement(Foot, {\n    finishedCount: finishedCount,\n    totalCount: todos.length,\n    dealSelectedAllTodo: dealSelectedAllTodo,\n    delCheckTodo: delCheckTodo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/cvter/Documents/react-demo/todolist-hockredux/src/App.js"],"names":["React","useState","useReducer","Head","List","Foot","reducer","DEL_TODO_ITEM","App","id","title","finished","todos","setTodos","finishedCount","setfinishedCount","newState","state","dispatch","changeTodoFinished","todoId","isFinished","type","console","log","finishedCountAdd","forEach","todo","dealSelectedAllTodo","flag","addOneTodo","push","removeTodoWithId","index","splice","delCheckTodo","tempArr","length"],"mappings":"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","sourcesContent":["import React, { useState,useReducer } from 'react';\nimport Head from './components/Head'\nimport List from './components/List'\nimport Foot from './components/Foot'\nimport reducer from './store/reducer'\nimport {DEL_TODO_ITEM} from './store/actionTypes'\n\nfunction App() {\n  \n  const [todos, setTodos] = useState([\n    { id: 1, title: '看一小时React的课程', finished: false },\n    { id: 2, title: '打一小时篮球', finished: false },\n    { id: 3, title: '游泳一小时', finished: false },\n    { id: 4, title: '看书一小时', finished: false },\n  ],\n  );\n  const [finishedCount, setfinishedCount] = useState(0)\n\n  const newState = {\n    todos,\n    finishedCount\n  }\n\n  const [state, dispatch] = useReducer(reducer,newState);\n\n  // 修改完成状态\n  const changeTodoFinished = (todoId, isFinished) => {\n    dispatch({type:DEL_TODO_ITEM,todoId:1})\n    console.log('state',state)\n    let finishedCountAdd = 0\n    // 遍历\n    todos.forEach((todo) => {\n      if (todo.id === todoId) {\n        todo.finished = isFinished;\n      }\n      if (todo.finished) {\n        finishedCountAdd++\n      }\n    });\n    //  更新状态\n    setTodos([...todos])\n    setfinishedCount(finishedCountAdd)\n  }\n  // 选中、取消所有\n  const dealSelectedAllTodo = (flag) => {\n    let finishedCountAdd = 0\n    todos.forEach(todo => {\n      todo.finished = flag\n      if (todo.finished) {\n        finishedCountAdd++\n      }\n    })\n    //  更新状态\n    setTodos([...todos])\n    setfinishedCount(finishedCountAdd)\n  };\n  // 添加一条todo\n  const addOneTodo = (todo) => {\n    todos.push(todo);\n    setTodos([...todos])\n  };\n  // 删除一条记录\n  const removeTodoWithId = (todoId) => {\n    let finishedCountAdd = 0\n    todos.forEach((todo, index) => {\n      if (todo.id === todoId) {\n        todos.splice(index, 1);\n      }\n    })\n    todos.forEach(todo => {\n      if (todo.finished) {\n        finishedCountAdd++;\n      }\n    });\n    //  更新状态\n    setTodos([...todos])\n    setfinishedCount(finishedCountAdd)\n  };\n\n  // 删除已经完成的所有任务\n  const delCheckTodo = () => {\n    let tempArr = [];\n    todos.forEach(todo => {\n      if (!todo.finished) {\n        tempArr.push(todo)\n      }\n    })\n    // 更新状态\n    setTodos(tempArr)\n    setfinishedCount(0)\n  }\n\n  return (\n    <div className=\"todo-container\" >\n      <div className=\"todo-wrap\">\n        <Head lastTodoId={todos.length === 0 ? 0 : todos[todos.length - 1].id} addOneTodo={addOneTodo} />\n        <List todos={todos} changeTodoFinished={changeTodoFinished} removeTodoWithId={removeTodoWithId} />\n        <Foot finishedCount={finishedCount}\n          totalCount={todos.length}\n          dealSelectedAllTodo={dealSelectedAllTodo}\n          delCheckTodo={delCheckTodo} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}