{"ast":null,"code":"import _classCallCheck from \"/Users/cvter/Documents/react-demo/todolist-reduxreselect/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/cvter/Documents/react-demo/todolist-reduxreselect/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/cvter/Documents/react-demo/todolist-reduxreselect/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/cvter/Documents/react-demo/todolist-reduxreselect/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/cvter/Documents/react-demo/todolist-reduxreselect/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/cvter/Documents/react-demo/todolist-reduxreselect/src/components/Foot.jsx\";\nimport React, { Component } from 'react';\nimport { getRemoveFinishedItemAction, getIsCheckedAll } from './../store/actionCreators';\nimport { connect } from 'react-redux';\nimport { getVisibleTodos } from '../selectors';\n\nvar Foot =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Foot, _Component);\n\n  function Foot() {\n    _classCallCheck(this, Foot);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Foot).apply(this, arguments));\n  }\n\n  _createClass(Foot, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          finishedCount = _this$props.finishedCount,\n          todos = _this$props.todos,\n          removeFinishedItem = _this$props.removeFinishedItem,\n          isCheckedAll = _this$props.isCheckedAll;\n      return React.createElement(\"div\", {\n        className: \"todo-footer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        checked: todos.length > 0 && finishedCount === todos.length,\n        onChange: function onChange() {\n          return isCheckedAll(finishedCount !== todos.length);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      })), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, \"\\u5DF2\\u5B8C\\u6210\", finishedCount, \"\\u4EF6\"), \" / \\u603B\\u8BA1\", todos.length, \"\\u4EF6\"), React.createElement(\"button\", {\n        className: \"btn btn-warning\",\n        onClick: function onClick() {\n          return removeFinishedItem();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, \"\\u6E05\\u9664\\u5DF2\\u5B8C\\u6210\\u4EFB\\u52A1\"));\n    }\n  }]);\n\n  return Foot;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    todos: getVisibleTodos(state.todos),\n    finishedCount: state.finishedCount\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    removeFinishedItem: function removeFinishedItem() {\n      var action = getRemoveFinishedItemAction();\n      dispatch(action);\n    },\n    isCheckedAll: function isCheckedAll(flag) {\n      var action = getIsCheckedAll(flag);\n      dispatch(action);\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Foot);","map":{"version":3,"sources":["/Users/cvter/Documents/react-demo/todolist-reduxreselect/src/components/Foot.jsx"],"names":["React","Component","getRemoveFinishedItemAction","getIsCheckedAll","connect","getVisibleTodos","Foot","props","finishedCount","todos","removeFinishedItem","isCheckedAll","length","mapStateToProps","state","mapDispatchToProps","dispatch","action","flag"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,2BAAR,EAAqCC,eAArC,QAA2D,2BAA3D;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAASC,eAAT,QAAgC,cAAhC;;IAEMC,I;;;;;;;;;;;;;6BAEO;AAAA,wBAC2D,KAAKC,KADhE;AAAA,UACEC,aADF,eACEA,aADF;AAAA,UACiBC,KADjB,eACiBA,KADjB;AAAA,UACwBC,kBADxB,eACwBA,kBADxB;AAAA,UAC2CC,YAD3C,eAC2CA,YAD3C;AAEL,aACI;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AACI,QAAA,IAAI,EAAC,UADT;AAEI,QAAA,OAAO,EAAEF,KAAK,CAACG,MAAN,GAAe,CAAf,IAAoBJ,aAAa,KAAKC,KAAK,CAACG,MAFzD;AAGI,QAAA,QAAQ,EAAE;AAAA,iBAAID,YAAY,CAACH,aAAa,KAAKC,KAAK,CAACG,MAAzB,CAAhB;AAAA,SAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,EAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAUJ,aAAV,WAAN,qBAA4CC,KAAK,CAACG,MAAlD,WARJ,EASI;AACI,QAAA,SAAS,EAAC,iBADd;AAEI,QAAA,OAAO,EAAE;AAAA,iBAAIF,kBAAkB,EAAtB;AAAA,SAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sDATJ,CADJ;AAkBH;;;;EAtBcT,S;;AAyBnB,IAAMY,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AAC/B,SAAO;AACHL,IAAAA,KAAK,EAACJ,eAAe,CAACS,KAAK,CAACL,KAAP,CADlB;AAEHD,IAAAA,aAAa,EAACM,KAAK,CAACN;AAFjB,GAAP;AAIH,CALD;;AAMA,IAAMO,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD,EAAc;AACrC,SAAO;AACHN,IAAAA,kBADG,gCACkB;AACjB,UAAMO,MAAM,GAAGf,2BAA2B,EAA1C;AACAc,MAAAA,QAAQ,CAACC,MAAD,CAAR;AACH,KAJE;AAKHN,IAAAA,YALG,wBAKUO,IALV,EAKgB;AACf,UAAMD,MAAM,GAAGd,eAAe,CAACe,IAAD,CAA9B;AACAF,MAAAA,QAAQ,CAACC,MAAD,CAAR;AACH;AARE,GAAP;AAUH,CAXD;;AAaA,eAAeb,OAAO,CAACS,eAAD,EAAiBE,kBAAjB,CAAP,CAA4CT,IAA5C,CAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport {getRemoveFinishedItemAction, getIsCheckedAll} from './../store/actionCreators';\r\nimport {connect} from 'react-redux';\r\nimport { getVisibleTodos } from '../selectors'\r\n\r\nclass Foot extends Component{\r\n    \r\n    render() {\r\n        const {finishedCount, todos, removeFinishedItem,isCheckedAll} = this.props;\r\n        return (\r\n            <div className=\"todo-footer\">\r\n                <label>\r\n                    <input\r\n                        type=\"checkbox\"\r\n                        checked={todos.length > 0 && finishedCount === todos.length}\r\n                        onChange={()=>isCheckedAll(finishedCount !== todos.length)}\r\n                    />\r\n                </label>\r\n                <span><span>已完成{finishedCount}件</span> / 总计{todos.length}件</span>\r\n                <button\r\n                    className=\"btn btn-warning\"\r\n                    onClick={()=>removeFinishedItem()}\r\n                >\r\n                    清除已完成任务\r\n                </button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        todos:getVisibleTodos(state.todos),\r\n        finishedCount:state.finishedCount\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        removeFinishedItem() {\r\n            const action = getRemoveFinishedItemAction();\r\n            dispatch(action)\r\n        },\r\n        isCheckedAll(flag) {\r\n            const action = getIsCheckedAll(flag);\r\n            dispatch(action);\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Foot)"]},"metadata":{},"sourceType":"module"}