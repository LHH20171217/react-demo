{"ast":null,"code":"import _classCallCheck from \"/Users/cvter/Documents/react-demo/todolist-reduxreselect/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/cvter/Documents/react-demo/todolist-reduxreselect/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/cvter/Documents/react-demo/todolist-reduxreselect/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/cvter/Documents/react-demo/todolist-reduxreselect/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/cvter/Documents/react-demo/todolist-reduxreselect/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/cvter/Documents/react-demo/todolist-reduxreselect/src/components/Head.jsx\";\nimport React, { Component } from 'react';\nimport { getAddItemAction } from './../store/actionCreators';\nimport { connect } from 'react-redux';\n\nvar Head =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Head, _Component);\n\n  function Head(props) {\n    var _this;\n\n    _classCallCheck(this, Head);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Head).call(this, props)); // 绑定ref\n\n    _this.myInput = React.createRef();\n    return _this;\n  }\n\n  _createClass(Head, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"todo-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        ref: this.myInput,\n        type: \"text\",\n        placeholder: \"\\u8BF7\\u8F93\\u5165\\u4ECA\\u5929\\u7684\\u4EFB\\u52A1\\u6E05\\u5355\\uFF0C\\u6309\\u56DE\\u8F66\\u952E\\u786E\\u8BA4\",\n        onKeyDown: function onKeyDown(e) {\n          return _this2._handleEvent(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"_handleEvent\",\n    value: function _handleEvent(e) {\n      var todos = this.props.todos;\n      var lastTodoId = todos.length === 0 ? 0 : todos[todos.length - 1].id; // 1. 判断是否是回车键\n\n      if (13 === e.keyCode) {\n        // 2. 判断输入的内容是否为空\n        if (!this.myInput.current.value) {\n          alert('输入的内容不能为空！');\n          return;\n        } // 3. 创建todo对象返回\n\n\n        var todo = {\n          id: lastTodoId + 1,\n          title: this.myInput.current.value,\n          finished: false\n        }; // const action = getAddItemAction(todo);\n        // store.dispatch(action);\n\n        this.props.addTodo(todo); // 4. 清空内容\n\n        this.myInput.current.value = '';\n      }\n    }\n  }]);\n\n  return Head;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    todos: state.todos\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    addTodo: function addTodo(todo) {\n      var action = getAddItemAction(todo);\n      dispatch(action);\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Head);","map":{"version":3,"sources":["/Users/cvter/Documents/react-demo/todolist-reduxreselect/src/components/Head.jsx"],"names":["React","Component","getAddItemAction","connect","Head","props","myInput","createRef","e","_handleEvent","todos","lastTodoId","length","id","keyCode","current","value","alert","todo","title","finished","addTodo","mapStateToProps","state","mapDispatchToProps","dispatch","action"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,gBAAR,QAA+B,2BAA/B;AACA,SAAQC,OAAR,QAAsB,aAAtB;;IAEMC,I;;;;;AACF,gBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AACd,8EAAMA,KAAN,GADc,CAEd;;AACA,UAAKC,OAAL,GAAeN,KAAK,CAACO,SAAN,EAAf;AAHc;AAIjB;;;;6BAEQ;AAAA;;AACL,aACI;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AACI,QAAA,GAAG,EAAE,KAAKD,OADd;AAEI,QAAA,IAAI,EAAC,MAFT;AAGI,QAAA,WAAW,EAAC,wGAHhB;AAII,QAAA,SAAS,EAAE,mBAACE,CAAD;AAAA,iBAAK,MAAI,CAACC,YAAL,CAAkBD,CAAlB,CAAL;AAAA,SAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ;AAUH;;;iCAEYA,C,EAAE;AAAA,UACJE,KADI,GACK,KAAKL,KADV,CACJK,KADI;AAEX,UAAMC,UAAU,GAAGD,KAAK,CAACE,MAAN,KAAiB,CAAjB,GAAqB,CAArB,GAAyBF,KAAK,CAACA,KAAK,CAACE,MAAN,GAAe,CAAhB,CAAL,CAAwBC,EAApE,CAFW,CAGX;;AACA,UAAG,OAAOL,CAAC,CAACM,OAAZ,EAAoB;AAChB;AACA,YAAG,CAAC,KAAKR,OAAL,CAAaS,OAAb,CAAqBC,KAAzB,EAA+B;AAC3BC,UAAAA,KAAK,CAAC,YAAD,CAAL;AACA;AACH,SALe,CAMhB;;;AACA,YAAMC,IAAI,GAAI;AAACL,UAAAA,EAAE,EAAEF,UAAU,GAAG,CAAlB;AAAqBQ,UAAAA,KAAK,EAAE,KAAKb,OAAL,CAAaS,OAAb,CAAqBC,KAAjD;AAAwDI,UAAAA,QAAQ,EAAE;AAAlE,SAAd,CAPgB,CAQhB;AACA;;AACA,aAAKf,KAAL,CAAWgB,OAAX,CAAmBH,IAAnB,EAVgB,CAWhB;;AACA,aAAKZ,OAAL,CAAaS,OAAb,CAAqBC,KAArB,GAA6B,EAA7B;AACH;AACJ;;;;EAtCcf,S;;AAyCnB,IAAMqB,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AAC/B,SAAO;AACHb,IAAAA,KAAK,EAAEa,KAAK,CAACb;AADV,GAAP;AAGH,CAJD;;AAKA,IAAMc,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD,EAAa;AACpC,SAAO;AACHJ,IAAAA,OADG,mBACKH,IADL,EACW;AACV,UAAMQ,MAAM,GAAGxB,gBAAgB,CAACgB,IAAD,CAA/B;AACAO,MAAAA,QAAQ,CAACC,MAAD,CAAR;AACH;AAJE,GAAP;AAMH,CAPD;;AASA,eAAevB,OAAO,CAACmB,eAAD,EAAiBE,kBAAjB,CAAP,CAA4CpB,IAA5C,CAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport {getAddItemAction} from './../store/actionCreators'\r\nimport {connect} from 'react-redux'\r\n\r\nclass Head extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        // 绑定ref\r\n        this.myInput = React.createRef();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"todo-header\">\r\n                <input\r\n                    ref={this.myInput}\r\n                    type=\"text\"\r\n                    placeholder=\"请输入今天的任务清单，按回车键确认\"\r\n                    onKeyDown={(e)=>this._handleEvent(e)}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    _handleEvent(e){\r\n        const {todos} = this.props;\r\n        const lastTodoId = todos.length === 0 ? 0 : todos[todos.length - 1].id;\r\n        // 1. 判断是否是回车键\r\n        if(13 === e.keyCode){\r\n            // 2. 判断输入的内容是否为空\r\n            if(!this.myInput.current.value){\r\n                alert('输入的内容不能为空！');\r\n                return;\r\n            }\r\n            // 3. 创建todo对象返回\r\n            const todo =  {id: lastTodoId + 1, title: this.myInput.current.value, finished: false};\r\n            // const action = getAddItemAction(todo);\r\n            // store.dispatch(action);\r\n            this.props.addTodo(todo)\r\n            // 4. 清空内容\r\n            this.myInput.current.value = '';\r\n        }\r\n    }\r\n\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        todos: state.todos\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return {\r\n        addTodo(todo) {\r\n            const action = getAddItemAction(todo);\r\n            dispatch(action)\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Head)"]},"metadata":{},"sourceType":"module"}